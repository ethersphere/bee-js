name: Tests

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '**'

jobs:
  nodejs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Install fdp-play
        run: npm install --global @fairdatasociety/fdp-play

      - name: Install swarm-cli
        run: npm install --global @ethersphere/swarm-cli

      - name: Run bee-dev
        run: npx bee-dev --port 16337 &

      - name: Start fdp-play environment
        run: fdp-play start --detach --fresh --bee-version d0aa8b9-commit

      - name: Stake
        if: false
        run: swarm-cli stake deposit --bzz 10.1 --yes

      - name: Deposit to chequebook
        run: |
          swarm-cli cheque deposit 100000000000000000
          swarm-cli cheque deposit 100000000000000000 --bee-api-url http://localhost:11633
          swarm-cli cheque deposit 100000000000000000 --bee-api-url http://localhost:21633
          swarm-cli cheque deposit 100000000000000000 --bee-api-url http://localhost:31633
          swarm-cli cheque deposit 100000000000000000 --bee-api-url http://localhost:41633

      - name: Create managed postage batch
        run: echo "JEST_MANAGED_BATCH_ID=$(swarm-cli stamp buy --depth 20 --amount 1b --quiet)" >> $GITHUB_ENV

      - name: Create external postage batch
        run: echo "JEST_EXTERNAL_BATCH_ID=$(swarm-cli stamp buy --depth 20 --amount 1b --quiet)" >> $GITHUB_ENV

      - name: Tests
        id: tests
        env:
          JEST_BEE_URL: http://localhost:1633
          JEST_BEE_SIGNER: '566058308ad5fa3888173c741a1fb902c9f1f19559b11fc2738dfc53637ce4e9'
          JEST_WITHDRAW_ADDRESS: '0x0000000000000000000000000000000000000000'
        run: |
          set +e
          npm test
          echo "exit_code=$?" >> $GITHUB_OUTPUT
          set -e

      - name: Compare coverage
        if: github.ref != 'refs/heads/main' && !matches(github.event.pull_request.title, '^chore.*release')
        run:
          npx npxie coverage-comparison "${{ github.repository }}" "master" "${{ github.head_ref }}"
          "test/coverage/coverage-summary.json" "${{ github.event.pull_request.number }}" "${{ secrets.GITHUB_TOKEN }}"

      - name: Fail if tests failed
        if: steps.tests.outputs.exit_code != '0'
        run: exit 1
